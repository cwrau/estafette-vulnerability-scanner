apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ include "estafette-vulnerability-scanner.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "estafette-vulnerability-scanner.labels" . | nindent 4 }}
spec:
  concurrencyPolicy: Forbid
  schedule: '{{.Values.schedule}}'
  jobTemplate:
    spec:
      completions: 1
      parallelism: 1
      template:
        metadata:
          labels:
            {{- include "estafette-vulnerability-scanner.selectorLabels" . | nindent 12 }}
            app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
            {{- range $key, $value := .Values.extraPodLabels }}
            {{ $key }}: {{ $value }}
            {{- end }}
          annotations:
            prometheus.io/scrape: "true"
            prometheus.io/port: "9101"
        spec:
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          restartPolicy: OnFailure
          serviceAccountName: {{ include "estafette-vulnerability-scanner.serviceAccountName" . }}
          securityContext:
            {{- toYaml .Values.podSecurityContext | nindent 12 }}
          containers:
          - name: {{ .Chart.Name }}
            securityContext:
              {{- toYaml .Values.securityContext | nindent 14 }}
            image: "{{ .Values.image.repository }}:{{ template "estafette-vulnerability-scanner.imageTag" . }}"
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            {{- with .Values.extraArgs }}
            args:
              {{- toYaml . | nindent 16 }}
            {{- end }}
            env:
              - name: NODE_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: spec.nodeName
              - name: "GRACE_TIME_SECONDS"
                value: "{{ .Values.graceTimeSeconds }}"
              - name: "ESTAFETTE_LOG_FORMAT"
                value: "{{ .Values.logFormat }}"
              - name: "ESTAFETTE_LOG_LEVEL"
                value: "{{ .Values.logLevel }}"
              {{- range $key, $value := .Values.extraEnv }}
              - name: {{ $key }}
                value: {{ $value }}
              {{- end }}
            ports:
              - name: metrics
                containerPort: 9101
                protocol: TCP
            livenessProbe:
              httpGet:
                path: /metrics
                port: metrics
              initialDelaySeconds: 30
              timeoutSeconds: 1
            resources:
              {{- toYaml .Values.resources | nindent 14 }}
            volumeMounts:
            - name: docker-binary
              mountPath: /usr/bin/docker
            - name: docker-socket
              mountPath: /var/run/docker.sock
          terminationGracePeriodSeconds: 300
          volumes:
          - name: docker-binary
            hostPath:
              path: {{ .Values.dockerBinaryHostPath }}
              type: File
          - name: docker-socket
            hostPath:
              path: {{ .Values.dockerSocketHostPath }}
              type: File
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
